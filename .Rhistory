myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
#myTsim(10, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
#myTsim(10, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
#myTsim(10, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
#myTsim(10, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
#myTsim(10, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
#myTsim(10, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
#myTsim(10, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
#myTsim(10, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
#myTsim(10, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
#myTsim(10, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
#myTsim(10, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
#myTsim(10, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.5, 2, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.5, 2, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.5, 1.5, 0.4)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(pacman, tidyverse, lattice, s20x, knitr, devtools, roxygen2, testthat)
mychisim<-function(n1,sigma1,mean1,iter,ymax,x,y, ...){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
w=(n1-1)*ssq1/sigma1^2      #chi-sq stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]," = ",n1," statistic = ",chi^2)),
xlab=expression(paste(chi^2, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dchisq(x,n1-1),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(chi^2==frac((n[1]-1)*s^2,sigma^2)) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
return(list(w=w,summary=summary(w),sd=sd(w),fun="Chi-sq")) # some output to use if needed
}
myTsim<-function(n1,sigma1,mean1,iter,ymax,x,y,...){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
sd1=apply(data1.mat,2,sd) # sd
ybar=apply(data1.mat,2,mean)  # mean
w=(ybar-mean1)/(sd1/sqrt(n1))      #T stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]," = ",n1," statistic = ",T," iterations= ",iter)),
xlab=expression(paste(T, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dt(x,n1-1),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(T==frac((bar(y)-mu),s/sqrt(n1))) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
invisible(list(w=w,summary=summary(w),sd=sd(w),fun="T")) # some output to use if needed
return(list(w=w,summary=summary(w),sd=sd(w),fun="T")) # some output to use if needed
}
myTsim(10, 4, 10, 1000, 0.5, 2, 0.5)
myTsim(20, 4, 10, 1000, 0.4, 2, 0.4)
myTsim(100, 4, 10, 1000, 0.5, 1.5, 0.4)
myTsim(200, 4, 10, 1000, 0.5, 1.5, 0.4)
twval <- myTsim(10, 10, 20, 1500, 0.12, 20, 0.07)
hist(twval$w, col = rainbow(16), xlab = expression(paste(T, "Value", sep = " "), las = 1))
twval <- myTsim(10, 10, 20, 1500, 0.5, 20, 0.07)
hist(twval$w, col = rainbow(16), xlab = expression(paste(T, "Value", sep = " "), las = 1))
twval <- myTsim(10, 10, 20, 1500, 0.4, 20, 0.07)
hist(twval$w, col = rainbow(16), xlab = expression(paste(T, "Value", sep = " "), las = 1))
twval <- myTsim(10, 10, 20, 1500, 0.4, 20, 0.07)
hist(twval$w, col = rainbow(16), xlab = expression(paste(T, "Value", sep = " "), las = 1))
twval <- myTsim(10, 10, 20, 1500, 0.4, 20, 0.07)
hist(twval$w, col = rainbow(16), xlab = expression(paste(T, "Value", sep = " "), las = 1))
twval <- myTsim(10, 10, 20, 1500, 0.4, 20, 0.07)
hist(twval$w, col = rainbow(16), xlab = expression(paste(T, "Value", sep = " "), las = 1))
twval <- myTsim(10, 10, 20, 1500, 0.45, 20, 0.07)
hist(twval$w, col = rainbow(16), xlab = expression(paste(T, "Value", sep = " "), las = 1))
twval <- myTsim(10, 10, 20, 1500, 0.5, 20, 0.07)
hist(twval$w, col = rainbow(16), xlab = expression(paste(T, "Value", sep = " "), las = 1))
twval <- myTsim(10, 10, 20, 1500, 0.4, 20, 0.07)
hist(twval$w, col = rainbow(16), xlab = expression(paste(T, "Value", sep = " "), las = 1))
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(pacman, tidyverse, lattice, s20x, knitr, devtools, roxygen2, testthat)
mychisim<-function(n1,sigma1,mean1,iter,ymax,x,y, ...){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
w=(n1-1)*ssq1/sigma1^2      #chi-sq stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]," = ",n1," statistic = ",chi^2)),
xlab=expression(paste(chi^2, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dchisq(x,n1-1),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(chi^2==frac((n[1]-1)*s^2,sigma^2)) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
return(list(w=w,summary=summary(w),sd=sd(w),fun="Chi-sq")) # some output to use if needed
}
myTsim<-function(n1,sigma1,mean1,iter,ymax,x,y,...){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
sd1=apply(data1.mat,2,sd) # sd
ybar=apply(data1.mat,2,mean)  # mean
w=(ybar-mean1)/(sd1/sqrt(n1))      #T stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]," = ",n1," statistic = ",T," iterations= ",iter)),
xlab=expression(paste(T, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dt(x,n1-1),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(T==frac((bar(y)-mu),s/sqrt(n1))) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
invisible(list(w=w,summary=summary(w),sd=sd(w),fun="T")) # some output to use if needed
return(list(w=w,summary=summary(w),sd=sd(w),fun="T")) # some output to use if needed
}
mychisim2<-function(n1=10,n2=14,sigma1=3,sigma2=3,mean1=5,mean2=10,iter=1000,ymax=0.07,...){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
y2=rnorm(n2*iter,mean=mean2,sd=sigma2)
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
data2.mat=matrix(y2,nrow=n2,ncol=iter,byrow=TRUE)
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
ssq2=apply(data2.mat,2,var)
spsq=((n1-1)*ssq1 + (n2-1)*ssq2)/(n1+n2-2) # pooled s squared
w=(n1+n2-2)*spsq/(sigma1^2)#sigma1=sigma2,  Chi square stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]+n[2]," = ",n1+n2," statistic = ",chi^2)),
xlab=expression(paste(chi^2, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dchisq(x,n1+n2-2),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(chi^2==frac((n[1]+n[2]-2)*S[p]^2,sigma^2)) #mathematical annotation -see ?plotmath
legend(locator(1),c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
return(list(w=w,summary=summary(w),sd=sd(w),fun="Chi-sq")) # some output to use if needed
}
twval <- myTsim(n1 = 10, sigma1 = 10, mean1 = 20, iter = 1500, ymax = 0.4, x = 20, y = 0.07)
hist(twval$w, col = rainbow(16), xlab = expression(paste(T, "Value", sep = " "), las = 1))
myTsim(n1 = 10, sigma1 = 4, mean1 = 10, iter = 1000, ymax = 0.5, x = 2, y = 0.5)
myTsim(n1 = 20, sigma1 = 4, mean1 = 10, iter = 1000, ymax = 0.4, x = 2, y = 0.4)
myTsim(n1 = 100, sigma1 = 4, mean1 = 10, iter = 1000, ymax = 0.5, x = 1.5, y = 0.4)
myTsim(n1 = 200, sigma1 = 4, mean1 = 10, iter = 1000, ymax = 0.5, x = 1.5, y = 0.4)
mychisim(n1 = 10, sigma1 = 4, mean1 = 10, iter = 1000, ymax = 0.12, x = 20, y = 0.08)
mychisim(n1 = 20, sigma1 = 4, mean1 = 10, iter = 1000, ymax = 0.08, x = 30, y = 0.08)
mychisim(n1 = 100, sigma1 = 4, mean1 = 10, iter = 1000, ymax = 0.04, x = 120, y = 0.03)
mychisim(n1 = 200, sigma1 = 4, mean1 = 10, iter = 1000, ymax = 0.03, x = 225, y = 0.025)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 5)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 1)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.3)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.15)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(pacman, tidyverse, lattice, s20x, knitr, devtools, roxygen2, testthat)
mychisim<-function(n1,sigma1,mean1,iter,ymax,x,y, ...){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
w=(n1-1)*ssq1/sigma1^2      #chi-sq stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]," = ",n1," statistic = ",chi^2)),
xlab=expression(paste(chi^2, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dchisq(x,n1-1),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(chi^2==frac((n[1]-1)*s^2,sigma^2)) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
return(list(w=w,summary=summary(w),sd=sd(w),fun="Chi-sq")) # some output to use if needed
}
myTsim<-function(n1,sigma1,mean1,iter,ymax,x,y,...){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
sd1=apply(data1.mat,2,sd) # sd
ybar=apply(data1.mat,2,mean)  # mean
w=(ybar-mean1)/(sd1/sqrt(n1))      #T stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]," = ",n1," statistic = ",T," iterations= ",iter)),
xlab=expression(paste(T, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dt(x,n1-1),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(T==frac((bar(y)-mu),s/sqrt(n1))) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
invisible(list(w=w,summary=summary(w),sd=sd(w),fun="T")) # some output to use if needed
return(list(w=w,summary=summary(w),sd=sd(w),fun="T")) # some output to use if needed
}
mychisim2<-function(n1=10,n2=14,sigma1=3,sigma2=3,mean1=5,mean2=10,iter=1000,ymax=0.07,...){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
y2=rnorm(n2*iter,mean=mean2,sd=sigma2)
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
data2.mat=matrix(y2,nrow=n2,ncol=iter,byrow=TRUE)
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
ssq2=apply(data2.mat,2,var)
spsq=((n1-1)*ssq1 + (n2-1)*ssq2)/(n1+n2-2) # pooled s squared
w=(n1+n2-2)*spsq/(sigma1^2)#sigma1=sigma2,  Chi square stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]+n[2]," = ",n1+n2," statistic = ",chi^2)),
xlab=expression(paste(chi^2, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dchisq(x,n1+n2-2),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(chi^2==frac((n[1]+n[2]-2)*S[p]^2,sigma^2)) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
return(list(w=w,summary=summary(w),sd=sd(w),fun="Chi-sq")) # some output to use if needed
}
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(pacman, tidyverse, lattice, s20x, knitr, devtools, roxygen2, testthat)
mychisim<-function(n1,sigma1,mean1,iter,ymax,x,y, ...){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
w=(n1-1)*ssq1/sigma1^2      #chi-sq stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]," = ",n1," statistic = ",chi^2)),
xlab=expression(paste(chi^2, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dchisq(x,n1-1),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(chi^2==frac((n[1]-1)*s^2,sigma^2)) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
return(list(w=w,summary=summary(w),sd=sd(w),fun="Chi-sq")) # some output to use if needed
}
myTsim<-function(n1,sigma1,mean1,iter,ymax,x,y,...){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
sd1=apply(data1.mat,2,sd) # sd
ybar=apply(data1.mat,2,mean)  # mean
w=(ybar-mean1)/(sd1/sqrt(n1))      #T stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]," = ",n1," statistic = ",T," iterations= ",iter)),
xlab=expression(paste(T, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dt(x,n1-1),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(T==frac((bar(y)-mu),s/sqrt(n1))) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
invisible(list(w=w,summary=summary(w),sd=sd(w),fun="T")) # some output to use if needed
return(list(w=w,summary=summary(w),sd=sd(w),fun="T")) # some output to use if needed
}
mychisim2<-function(n1,n2,sigma1,sigma2,mean1,mean2,iter,ymax,...){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
y2=rnorm(n2*iter,mean=mean2,sd=sigma2)
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
data2.mat=matrix(y2,nrow=n2,ncol=iter,byrow=TRUE)
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
ssq2=apply(data2.mat,2,var)
spsq=((n1-1)*ssq1 + (n2-1)*ssq2)/(n1+n2-2) # pooled s squared
w=(n1+n2-2)*spsq/(sigma1^2)#sigma1=sigma2,  Chi square stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]+n[2]," = ",n1+n2," statistic = ",chi^2)),
xlab=expression(paste(chi^2, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dchisq(x,n1+n2-2),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(chi^2==frac((n[1]+n[2]-2)*S[p]^2,sigma^2)) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
return(list(w=w,summary=summary(w),sd=sd(w),fun="Chi-sq")) # some output to use if needed
}
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(pacman, tidyverse, lattice, s20x, knitr, devtools, roxygen2, testthat)
mychisim<-function(n1,sigma1,mean1,iter,ymax,x,y){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
w=(n1-1)*ssq1/sigma1^2      #chi-sq stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]," = ",n1," statistic = ",chi^2)),
xlab=expression(paste(chi^2, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dchisq(x,n1-1),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(chi^2==frac((n[1]-1)*s^2,sigma^2)) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
return(list(w=w,summary=summary(w),sd=sd(w),fun="Chi-sq")) # some output to use if needed
}
myTsim<-function(n1,sigma1,mean1,iter,ymax,x,y){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
sd1=apply(data1.mat,2,sd) # sd
ybar=apply(data1.mat,2,mean)  # mean
w=(ybar-mean1)/(sd1/sqrt(n1))      #T stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]," = ",n1," statistic = ",T," iterations= ",iter)),
xlab=expression(paste(T, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dt(x,n1-1),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(T==frac((bar(y)-mu),s/sqrt(n1))) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
invisible(list(w=w,summary=summary(w),sd=sd(w),fun="T")) # some output to use if needed
return(list(w=w,summary=summary(w),sd=sd(w),fun="T")) # some output to use if needed
}
mychisim2<-function(n1,n2,sigma1,sigma2,mean1,mean2,iter,ymax,x,y){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
y2=rnorm(n2*iter,mean=mean2,sd=sigma2)
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
data2.mat=matrix(y2,nrow=n2,ncol=iter,byrow=TRUE)
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
ssq2=apply(data2.mat,2,var)
spsq=((n1-1)*ssq1 + (n2-1)*ssq2)/(n1+n2-2) # pooled s squared
w=(n1+n2-2)*spsq/(sigma1^2)#sigma1=sigma2,  Chi square stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]+n[2]," = ",n1+n2," statistic = ",chi^2)),
xlab=expression(paste(chi^2, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dchisq(x,n1+n2-2),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(chi^2==frac((n[1]+n[2]-2)*S[p]^2,sigma^2)) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
return(list(w=w,summary=summary(w),sd=sd(w),fun="Chi-sq")) # some output to use if needed
}
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 10, mean1 = 5, mean2 = 4, iter = 10000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 10, mean1 = 5, mean2 = 4, iter = 10000, ymax = 0.10, x = 500, y = 0.02)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 10, mean1 = 5, mean2 = 4, iter = 10000, ymax = 0.04, x = 500, y = 0.04)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 10, mean1 = 5, mean2 = 4, iter = 10000, ymax = 0.02, x = 500, y = 0.04)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 10, mean1 = 5, mean2 = 4, iter = 10000, ymax = 0.01, x = 500, y = 0.04)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 10, mean1 = 5, mean2 = 4, iter = 10000, ymax = 0.01, x = 500, y = 0.008)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 10, mean1 = 5, mean2 = 10, iter = 10000, ymax = 0.01, x = 500, y = 0.008)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 10000, ymax = 0.01, x = 500, y = 0.008)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 10000, ymax = 0.05, x = 500, y = 0.008)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 10000, ymax = 0.04, x = 500, y = 0.008)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 10000, ymax = 0.04, x = 140, y = 0.03)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 10000, ymax = 0.04, x = 130, y = 0.03)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 10000, ymax = 0.04, x = 130, y = 0.03)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 10000, ymax = 0.04, x = 130, y = 0.03)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 10000, ymax = 0.04, x = 130, y = 0.03)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 10000, ymax = 0.04, x = 130, y = 0.03)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 10000, ymax = 0.04, x = 130, y = 0.03)
mychisim2(n1 = 80, n2 = 50, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 10000, ymax = 0.04, x = 130, y = 0.03)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 10000, ymax = 0.04, x = 130, y = 0.03)
mychisim2(n1 = 80, n2 = 50, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 10000, ymax = 0.04, x = 170, y = 0.03)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 10000, ymax = 0.04, x = 130, y = 0.03)
mychisim2(n1 = 80, n2 = 50, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 10000, ymax = 0.03, x = 170, y = 0.03)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 10000, ymax = 0.04, x = 130, y = 0.03)
mychisim2(n1 = 80, n2 = 50, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 10000, ymax = 0.03, x = 170, y = 0.03)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 10000, ymax = 0.04, x = 130, y = 0.03)
mychisim2(n1 = 80, n2 = 50, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 10000, ymax = 0.03, x = 170, y = 0.02)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 10000, ymax = 0.04, x = 130, y = 0.03)
mychisim2(n1 = 80, n2 = 50, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 10000, ymax = 0.03, x = 170, y = 0.02)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 10000, ymax = 0.04, x = 130, y = 0.03)
mychisim2(n1 = 80, n2 = 50, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 10000, ymax = 0.03, x = 160, y = 0.02)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 10000, ymax = 0.04, x = 130, y = 0.03)
mychisim2(n1 = 80, n2 = 50, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 10000, ymax = 0.03, x = 160, y = 0.02)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 10000, ymax = 0.04, x = 130, y = 0.03)
mychisim2(n1 = 80, n2 = 50, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 10000, ymax = 0.03, x = 160, y = 0.02)
mychisim2(n1 = 10, n2 = 10, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 1000, ymax = 0.10, x = 30, y = 0.08)
mychisim2(n1 = 20, n2 = 10, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 1000, ymax = 0.10, x = 40, y = 0.08)
mychisim2(n1 = 50, n2 = 50, sigma1 = 4, sigma2 = 4, mean1 = 5, mean2 = 10, iter = 10000, ymax = 0.04, x = 130, y = 0.03)
mychisim2(n1 = 80, n2 = 50, sigma1 = 10, sigma2 = 10, mean1 = 3, mean2 = 5, iter = 10000, ymax = 0.03, x = 160, y = 0.02)
